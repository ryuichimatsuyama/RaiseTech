version: 2.1

orbs:
  aws-cli: circleci/aws-cli@4.1.3

executors:
  default:
    docker:
      - image: circleci/python:3.8 

jobs:
  deploy:
    executor: default
    steps:
      - checkout
      - aws-cli/install      
      - run:
          name: Create resources with CloudFormation
          command: |
            MY_IP=$(curl -s http://checkip.amazonaws.com) 
            aws cloudformation deploy --stack-name $stackName --template-file cloudformation/rails.yml --parameter-overrides MyIP=$MY_IP/32 MasterUserPassword=$MasterUserPassword --capabilities CAPABILITY_NAMED_IAM
      - run:
          name: Get outputs of cloudformation
          command: |
            echo "ALBEndpoint=$(aws cloudformation describe-stacks --stack-name $stackName --query 'Stacks[0].Outputs[?OutputKey==`ALBEndpoint`].OutputValue' --output text)" >> $BASH_ENV
            echo "BucketName=$(aws cloudformation describe-stacks --stack-name $stackName --query 'Stacks[0].Outputs[?OutputKey==`BucketName`].OutputValue' --output text)" >> $BASH_ENV
            echo "PrivateIpAddress=$(aws cloudformation describe-stacks --stack-name $stackName --query 'Stacks[0].Outputs[?OutputKey==`PrivateIpAddress`].OutputValue' --output text)" >> $BASH_ENV
            echo "RDSEndpoint=$(aws cloudformation describe-stacks --stack-name $stackName --query 'Stacks[0].Outputs[?OutputKey==`RDSEndpoint`].OutputValue' --output text)" >> $BASH_ENV
      - run:
          name: Add variables to Ansible inventory
          command: |
            cat \<<EOF > inventory.yml
            all:
              hosts:
                appserver:
                  ansible_host: $PrivateIpAddress
                  ansible_user: ec2-user
                  ansible_ssh_private_key_file: ~/.ssh/id_rsa_SHA256:zlZVEZaepozVE6oteYFJDkqzzWmPrFA9fvAQBF+dGME
                  region: $AWS_DEFAULT_REGION
                  ALBEndpoint: $ALBEndpoint
                  BucketName: $BucketName
                  RDSEndpoint: $RDSEndpoint
                  MasterUserPassword: $MasterUserPassword
            EOF
      - run:
          name: Install Ansible
          command: |
            sudo apt-get update
            sudo apt-get install -y python3-pip
            pip3 install ansible
      - add_ssh_keys:
          fingerprints:
            - "SHA256:zlZVEZaepozVE6oteYFJDkqzzWmPrFA9fvAQBF+dGME"
      - run:
          name: Install Middleware using Ansible
          command: |
            ansible-playbook -i inventory.yml ansible/rails_playbook.yaml

  test:
    docker:
      - image: circleci/ruby:2.7
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "SHA256:zlZVEZaepozVE6oteYFJDkqzzWmPrFA9fvAQBF+dGME"
      - run:
          name: Create SSH config file
          command: |
            echo "Host target" >> ~/.ssh/config
            echo "    Hostname $PrivateIpAddress" >> ~/.ssh/config
            echo "    User ec2-user" >> ~/.ssh/config
            echo "    IdentityFile ~/.ssh/id_rsa_SHA256:zlZVEZaepozVE6oteYFJDkqzzWmPrFA9fvAQBF+dGME" >> ~/.ssh/config
            chmod 600 ~/.ssh/config    
      - run:
          name: Install bundler
          command: |
            sudo apt-get update
            gem install bundler -v 2.4.22
            bundle install --path serverspec/vendor/bundle
      - run:
          name: Run ServerSpec tests
          command: |
            cd serverspec
            bundle exec rake spec

workflows:
  version: 2
  deploy_and_test:
    jobs:
      - deploy
      - test:
          requires:
            - deploy
